<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>the log of study from jy</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-05-15T04:05:29.330Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Jiang Yi</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>nginx-use</title>
    <link href="http://example.com/2021/05/11/nginx-use/"/>
    <id>http://example.com/2021/05/11/nginx-use/</id>
    <published>2021-05-11T12:56:45.502Z</published>
    <updated>2021-05-15T04:05:29.330Z</updated>
    
    <content type="html"><![CDATA[<h1 id="nginx使用教程"><a href="#nginx使用教程" class="headerlink" title="nginx使用教程"></a>nginx使用教程</h1><p>本nginx是在Ubuntu20.04系统下运行的<br>nginx version: nginx/1.18.0 (Ubuntu)</p><h2 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h2><p>1.安装nginx的方法直接apt install nginx就可以<br>我们下面来看详细配置情况<br>当我们安装完nginx以后，可以在/etc/nginx中找到其配置情况<br>nginx.conf是它的配置文件,其中引入了confd.d/下的所有.conf文件<br>然后它的站点配置信息由sites-enabled/default这个文件配置,拿到这个站点文件之后就可以在里面生命server{}的站点配置<br>2.还有另外一种安装方式，先将它的安装打包文件传到服务器中，然后解压后进入文件./configure &amp;&amp;make&amp;&amp; make install<br>下面有几条相关的命令<br>启动：nginx 或者 nginx -c /配置文件的路径</p><p>  停止: nginx -s stop</p><p>  重启: nginx -s reload</p><p>  检查配置文件: nginx -t</p><p>  查看nginx启动情况: ps -ef | grep nginx</p><p>  如果出现报错<br>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx: [error] invalid PID number &quot;&quot; in &quot;/run/nginx.pid&quot;</span><br></pre></td></tr></table></figure></p><p>  需要先执行</p><p>  nginx -c /etc/nginx/nginx.conf</p><p>  nginx.conf文件的路径可以从nginx -t的返回中找到。</p><p>  nginx -s reload</p><p>  如果以上没用，则直接kill调nginx里面的进程</p><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>  注:nginx的配置文件在安装后的nginx目录下的conf文件夹中</p><h3 id="一-刚安装好的配置文件具体如下"><a href="#一-刚安装好的配置文件具体如下" class="headerlink" title="(一):刚安装好的配置文件具体如下:"></a>(一):刚安装好的配置文件具体如下:</h3> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">#user  nobody;</span></span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    root           html;</span></span><br><span class="line">        <span class="comment">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">        <span class="comment">#    fastcgi_index  index.php;</span></span><br><span class="line">        <span class="comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line">        <span class="comment">#    include        fastcgi_params;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># deny access to .htaccess files, if Apache&#x27;s document root</span></span><br><span class="line">        <span class="comment"># concurs with nginx&#x27;s one</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">        <span class="comment">#    deny  all;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># another virtual host using mix of IP-, name-, and port-based configuration</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#server &#123;</span></span><br><span class="line">    <span class="comment">#    listen       8000;</span></span><br><span class="line">    <span class="comment">#    listen       somename:8080;</span></span><br><span class="line">    <span class="comment">#    server_name  somename  alias  another.alias;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    location / &#123;</span></span><br><span class="line">    <span class="comment">#        root   html;</span></span><br><span class="line">    <span class="comment">#        index  index.html index.htm;</span></span><br><span class="line">    <span class="comment">#    &#125;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># HTTPS server</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#server &#123;</span></span><br><span class="line">    <span class="comment">#    listen       443 ssl;</span></span><br><span class="line">    <span class="comment">#    server_name  localhost;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_certificate      cert.pem;</span></span><br><span class="line">    <span class="comment">#    ssl_certificate_key  cert.key;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_session_cache    shared:SSL:1m;</span></span><br><span class="line">    <span class="comment">#    ssl_session_timeout  5m;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_ciphers  HIGH:!aNULL:!MD5;</span></span><br><span class="line">    <span class="comment">#    ssl_prefer_server_ciphers  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    location / &#123;</span></span><br><span class="line">    <span class="comment">#        root   html;</span></span><br><span class="line">    <span class="comment">#        index  index.html index.htm;</span></span><br><span class="line">    <span class="comment">#    &#125;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述是由安装包（第二种方法安装后的配置文件）<br>用第一种安装后的配置文件更加解耦化，有多个文件include而成，上诉有解释。配置相关差不多。</p><h3 id="二-配置详解"><a href="#二-配置详解" class="headerlink" title="(二)配置详解"></a>(二)配置详解</h3><p>1、根据上面的nginx配置文件,可以将nginx的配置分为以下的组成结构</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">... <span class="comment">#全局快</span></span><br><span class="line">events &#123;  <span class="comment">#events快</span></span><br><span class="line">&#125;</span><br><span class="line">http&#123; <span class="comment">#http块</span></span><br><span class="line">    server &#123; <span class="comment">#server快</span></span><br><span class="line">        location &#123; <span class="comment">#location快</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、每块的结构功能</p><p>  (1)、全局块: 配置影响nginx全局的指令。一般有运行nginx服务器的用户组，nginx进程pid存放路径，日志存放路径，配置文件引入，允许生成worker process数等。</p><p>  (2)、events块: 配置影响nginx服务器或与用户的网络连接。有每个进程的最大连接数，选取哪种事件驱动模型处理连接请求，是否允许同时接受多个网路连接，  开启多个网络连接序列化等</p><p>  (3)、http块: 可以配置多个server,配置代理、缓存、日志定义等能和第三方模块的配置。如文件引入，mime-type定义，日志自定义，是否使用sendfile传输文件，连接超时时间，单连接请求数等。 </p><p>  (4)、server块: 配置虚拟主机的相关参数，一个http中可以有多个server。</p><p>  (5)、location块: 配置请求的路由，以及各种页面的处理情况。</p><p>3、nginx配置文件详细的解释</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">########### 每个指令必须有分号结束。#################</span></span><br><span class="line"><span class="comment">#user administrator administrators;  #配置用户或者组，默认为nobody nobody。</span></span><br><span class="line"><span class="comment">#worker_processes 2;  #允许生成的进程数，默认为1</span></span><br><span class="line"><span class="comment">#pid /nginx/pid/nginx.pid;   #指定nginx进程运行文件存放地址</span></span><br><span class="line">error_log <span class="built_in">log</span>/error.log debug;  <span class="comment">#制定日志路径，级别。这个设置可以放入全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg</span></span><br><span class="line">events &#123;</span><br><span class="line">    accept_mutex on;   <span class="comment">#设置网路连接序列化，防止惊群现象发生，默认为on</span></span><br><span class="line">    multi_accept on;  <span class="comment">#设置一个进程是否同时接受多个网络连接，默认为off</span></span><br><span class="line">    <span class="comment">#use epoll;      #事件驱动模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport</span></span><br><span class="line">    worker_connections  1024;    <span class="comment">#最大连接数，默认为512</span></span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;   <span class="comment">#文件扩展名与文件类型映射表</span></span><br><span class="line">    default_type  application/octet-stream; <span class="comment">#默认文件类型，默认为text/plain</span></span><br><span class="line">    <span class="comment">#access_log off; #取消服务日志    </span></span><br><span class="line">    log_format myFormat <span class="string">&#x27;$remote_addr–$remote_user [$time_local] $request $status $body_bytes_sent $http_referer $http_user_agent $http_x_forwarded_for&#x27;</span>; <span class="comment">#自定义格式</span></span><br><span class="line">    access_log <span class="built_in">log</span>/access.log myFormat;  <span class="comment">#combined为日志格式的默认值</span></span><br><span class="line">    sendfile on;   <span class="comment">#允许sendfile方式传输文件，默认为off，可以在http块，server块，location块。</span></span><br><span class="line">    sendfile_max_chunk 100k;  <span class="comment">#每个进程每次调用传输数量不能大于设定的值，默认为0，即不设上限。</span></span><br><span class="line">    keepalive_timeout 65;  <span class="comment">#连接超时时间，默认为75s，可以在http，server，location块。</span></span><br><span class="line"></span><br><span class="line">    upstream mysvr &#123;   </span><br><span class="line">      server 127.0.0.1:7878;</span><br><span class="line">      server 192.168.10.121:3333 backup;  <span class="comment">#热备</span></span><br><span class="line">    &#125;</span><br><span class="line">    error_page 404 https://www.baidu.com; <span class="comment">#错误页</span></span><br><span class="line">    server &#123;</span><br><span class="line">        keepalive_requests 120; <span class="comment">#单连接请求上限次数。</span></span><br><span class="line">        listen       4545;   <span class="comment">#监听端口</span></span><br><span class="line">        server_name  127.0.0.1;   <span class="comment">#监听地址       </span></span><br><span class="line">        location  ~*^.+$ &#123;       <span class="comment">#请求的url过滤，正则匹配，~为区分大小写，~*为不区分大小写。</span></span><br><span class="line">           <span class="comment">#root path;  #根目录</span></span><br><span class="line">           <span class="comment">#index vv.txt;  #设置默认页</span></span><br><span class="line">           proxy_pass  http://mysvr;  <span class="comment">#请求转向mysvr 定义的服务器列表</span></span><br><span class="line">           deny 127.0.0.1;  <span class="comment">#拒绝的ip</span></span><br><span class="line">           allow 172.18.5.54; <span class="comment">#允许的ip           </span></span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="以上都是没有成功之前的一些文案，下面是一些在配置过程中出现并且了解的知识点"><a href="#以上都是没有成功之前的一些文案，下面是一些在配置过程中出现并且了解的知识点" class="headerlink" title="以上都是没有成功之前的一些文案，下面是一些在配置过程中出现并且了解的知识点"></a>以上都是没有成功之前的一些文案，下面是一些在配置过程中出现并且了解的知识点</h2><p>在配置使用命令行进行的文件结构中<br>etc/nginx下面有两个主要引入的配置文件：<br>第一个是conf.d中的文件<br>第二个是site-enable中的文件，其中site-enable的文件就是对site-avalible中的文件的链接，直接对site-avalible中的文件进行修改就可以</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;nginx使用教程&quot;&gt;&lt;a href=&quot;#nginx使用教程&quot; class=&quot;headerlink&quot; title=&quot;nginx使用教程&quot;&gt;&lt;/a&gt;nginx使用教程&lt;/h1&gt;&lt;p&gt;本nginx是在Ubuntu20.04系统下运行的&lt;br&gt;nginx version</summary>
      
    
    
    
    <category term="命令技巧" scheme="http://example.com/categories/%E5%91%BD%E4%BB%A4%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="nginx" scheme="http://example.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>ai-study</title>
    <link href="http://example.com/2021/05/11/ai-study/"/>
    <id>http://example.com/2021/05/11/ai-study/</id>
    <published>2021-05-10T16:33:46.511Z</published>
    <updated>2021-05-10T16:42:10.665Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于ai学习的一些历程"><a href="#关于ai学习的一些历程" class="headerlink" title="关于ai学习的一些历程"></a>关于ai学习的一些历程</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;关于ai学习的一些历程&quot;&gt;&lt;a href=&quot;#关于ai学习的一些历程&quot; class=&quot;headerlink&quot; title=&quot;关于ai学习的一些历程&quot;&gt;&lt;/a&gt;关于ai学习的一些历程&lt;/h2&gt;</summary>
      
    
    
    
    <category term="学习记录" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="ai" scheme="http://example.com/tags/ai/"/>
    
  </entry>
  
  <entry>
    <title>ai-environment</title>
    <link href="http://example.com/2021/05/11/ai-env/"/>
    <id>http://example.com/2021/05/11/ai-env/</id>
    <published>2021-05-10T16:21:53.517Z</published>
    <updated>2021-05-10T16:37:22.256Z</updated>
    
    <content type="html"><![CDATA[<h2 id="这个文档主要与pytorch等机器学习等python或者其他库等配置方法，和在服务器中的使用方法"><a href="#这个文档主要与pytorch等机器学习等python或者其他库等配置方法，和在服务器中的使用方法" class="headerlink" title="这个文档主要与pytorch等机器学习等python或者其他库等配置方法，和在服务器中的使用方法"></a>这个文档主要与pytorch等机器学习等python或者其他库等配置方法，和在服务器中的使用方法</h2><ol><li>用nvidia-smi来查看显卡的信息</li><li>接着用yum来安装python</li><li>安装annocoda环境，先下载包，然后bash即可，会自动帮你配置好文件</li><li>export PATH=”/home/‘user’/anaconda3/bin:$PATH”</li><li>conda create -n pytorch python=3.8</li><li>source activate pytorch</li><li>接着创建虚拟环境，用pip安装你想要的扩展包即可，注意与自己的cuda环境版本要一致</li><li>上传模型文件以及其他的训练材料</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;这个文档主要与pytorch等机器学习等python或者其他库等配置方法，和在服务器中的使用方法&quot;&gt;&lt;a href=&quot;#这个文档主要与pytorch等机器学习等python或者其他库等配置方法，和在服务器中的使用方法&quot; class=&quot;headerlink&quot; tit</summary>
      
    
    
    
    <category term="命令技巧" scheme="http://example.com/categories/%E5%91%BD%E4%BB%A4%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="ai" scheme="http://example.com/tags/ai/"/>
    
  </entry>
  
  <entry>
    <title>unix-order</title>
    <link href="http://example.com/2021/05/10/unix-order/"/>
    <id>http://example.com/2021/05/10/unix-order/</id>
    <published>2021-05-10T09:05:38.661Z</published>
    <updated>2021-05-11T08:58:24.717Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Unix"><a href="#Unix" class="headerlink" title="Unix"></a>Unix</h1><h1 id="Unix-常用命令技巧（可配-linux-大部分命令）"><a href="#Unix-常用命令技巧（可配-linux-大部分命令）" class="headerlink" title="Unix 常用命令技巧（可配 linux 大部分命令）"></a>Unix 常用命令技巧（可配 linux 大部分命令）</h1><p>pwd：print work directory 打印工作目录</p><p>ls：查看当前文件夹文件 </p><p>​    -l：查看文件     -al：查看左右文件（包含以小数点开头的隐藏文件） </p><p>​    ls | more 分页展示当前文件夹中的所有文件</p><p>​    ls python* 这个就是使用正则表达式来搜索</p><p>​    ls | grep “python”将前面查询结果交由后面继续查询</p><p>​        ｜是管道符号，将前面命令结果交由后面的命令执行</p><p>​    ln：给文件建立链接</p><p>​            使用方式：ln -s 【源文件】【链接名】注意只能建立文件类型的链接不能建立文件夹类型的链接</p><p>​            【option】：-s：建立链接</p><p>​                       -f：存在覆盖，不存在则覆盖</p><p>find ：搜索查询文件</p><p>​        find 查询路径 选项 参数</p><p>​            比如find . -name “python”查询当前目录下所有名字中有关键字python的文件</p><p>​            各种查询方式可以从man中找到</p><p>cd：改变文件夹位置</p><p>​    加~回车 或者 直接回车：直接进入用户当前主目录</p><p>​    加/回车：进入用户根目录</p><p>who：查看当前系统的用户</p><p>​    whoami：当前登录用户</p><p>man：查看命令帮助手册</p><p>–help：查看命令选项(也就是放在指令后面)</p><p>history：罗列在终端窗口中操作的命令</p><p>touch：在当前文件目录中创建一个空文件</p><p>mkdir：在当前文件目录中创建一个文件夹，mkdir -p 可以用/来进行连续嵌套，比如mkdir -p /微信/user</p><p>tree：列出在本目录下，文件的树形图</p><p>rm：删除一个文件    rmdir：删除一个文件夹    rm -rf连级删除文件夹（文件夹里面        的东西也会删掉）。rm -rf * 删除当前文件夹中的所有文件，执行之前使pwd确认一下当前文件夹是哪个，一般在unix删除大量日志信息时，要确定在哪个文件夹。rm -rf /：永远不要执行，这个是删除根目录。</p><p>tar：打包解压命令 </p><p>​        -c：打包，将多个文件打包成一个文件，这个文件后缀名：.tar</p><p>​        -x ：解包，将.tar文件拆分成原始的多个文件</p><p>​        -t：查看.tar包中的所有文件</p><p>​        -v：展示操作过程信息</p><p>​        -f：不需要确认直接操作</p><p>​        tar -cvf ：文件.tar 要打包的多个文件列表</p><p>​        tar -tvf：查看包内多个文件</p><p>​        打包文件是为了统一整理文件，方便文件在移动/传输中最大程度的保证文件不损坏</p><p>gzip：压缩命令，压缩文件的名称，后缀名一般是：gz    通常情况下，和tar命令一起使用，tar命令打包文件，gzip压缩文件，得到.tar.tz，默认压缩的话会直接覆盖原文件</p><p>​        gzip -d：解压缩文件</p><p>​    tar -xzvf 文件.tar.gz：解压缩.tar.gz文件，解压的同时拆包，得到具体文件</p><p>bzip2：压缩解压命令，和tar命令一般结合使用，tar用于文件打包，bzip2用于压缩，压缩后的：.tar.bz2为后缀</p><p>zip | unzip :压缩与解压缩 </p><p>​        zip后缀：.zip 使用方法，zip 压缩后的名称 具体压缩文件列表; </p><p>​        unzip 使用方法：直接unzip 文件名</p><p>cp：copy复制文件的指令 具体使用方式为：cp 【当前文件夹内文件】 【复制到指定目录】</p><p>mv：剪切文件指令</p><p>more：查看文件中的内容</p><p>cat：直接查看文件内容，全部内容直接展示。</p><p>tail -f ：查看文件末尾的内容，默认展示10行内容，并且持续监视文件，如果文件中新增数据也会直接展示到屏幕中，通常用于监控内容的变化 </p><p>head：查看文件开头内容</p><p>grep：搜索查询的命令可以从文件中，列出包含查询文本的行</p><p>top：查看Unix/linux中的任务管理器</p><p>​        查看当前系统中正在运行的软件进程，以  及他们消耗的系统资源信息</p><p>ps：查看系统中的所有进程【process status进程状态】</p><p>​        通常情况下我们使用下面的命令</p><p>​        ps -ef | grep [具体进程名字]</p><p>kill：杀死进程</p><p>​    kill 进程编号</p><p>!! ：将上一个命令执行一下</p><p>!【所匹配符】：执行的最近的能匹配到的匹配符的指令</p><p>文件权限：<br><img src="/images/image-20210309220647820.png" alt="image-20210309220647820.png"></p><p>​在unix中对于用户来说只能操作自己目录下的文件</p><p><img src="/images/image-20210309221210006.png" alt="image-20210309221210006"></p><p><img src="/images/image-20210309221541565.png" alt="image-20210309221541565"></p><p><img src="/images/image-20210309222228349.png" alt="image-20210309222228349"></p><h2 id="mac-本地文件与服务器Linux文件之间的相互传输"><a href="#mac-本地文件与服务器Linux文件之间的相互传输" class="headerlink" title="mac 本地文件与服务器Linux文件之间的相互传输"></a>mac 本地文件与服务器Linux文件之间的相互传输</h2><p>可以简单用scp 命令来实现</p><p>查看scp帮助：sup -h</p><p>输出信息如下：usage: scp [-12346BCEpqrv] [-c cipher] [-F ssh_config] [-i identity_file]  [-l limit] [-o ssh_option] [-P port] [-S program][[user@]host1:]file1 … [[user@]host2:]file2</p><p>OPTIONS：</p><p>-v  显示进度。可以用来查看连接、认证、或是配置错误</p><p>-P 选择端口</p><p>-r 复制目录</p><p>1、从本地将文件传输到服务器<br>scp[本地文件的路径]   [服务器用户名]@[服务器地址]:[服务器上存放文件的路径]</p><p>scp /Users/mac/Desktop/test.txt <a href="mailto:&#x72;&#111;&#111;&#x74;&#x40;&#49;&#x39;&#50;&#x2e;&#49;&#x36;&#56;&#46;&#49;&#x2e;&#x31;">&#x72;&#111;&#111;&#x74;&#x40;&#49;&#x39;&#50;&#x2e;&#49;&#x36;&#56;&#46;&#49;&#x2e;&#x31;</a>:/root</p><p>2、从本地将文件夹传输到服务器<br>scp -r[本地文件的路径]   [服务器用户名]@[服务器地址]:[服务器上存放文件的路径]</p><p>scp -r /Users/mac/Desktop/test <a href="mailto:&#x72;&#x6f;&#111;&#x74;&#x40;&#49;&#57;&#50;&#x2e;&#x31;&#54;&#x38;&#46;&#49;&#46;&#x31;">&#x72;&#x6f;&#111;&#x74;&#x40;&#49;&#57;&#50;&#x2e;&#x31;&#54;&#x38;&#46;&#49;&#46;&#x31;</a>:/root</p><p>3、将服务器上的文件传输到本地<br>scp [服务器用户名]@[服务器地址]:[服务器上存放文件的路径]   [本地文件的路径]</p><p>scp <a href="mailto:&#x72;&#111;&#111;&#x74;&#64;&#49;&#x39;&#x32;&#x2e;&#49;&#54;&#x38;&#x2e;&#49;&#46;&#x31;">&#x72;&#111;&#111;&#x74;&#64;&#49;&#x39;&#x32;&#x2e;&#49;&#54;&#x38;&#x2e;&#49;&#46;&#x31;</a>:/root/default/test.txt /Users/mac/Desktop</p><p>4、将服务器上的文件夹传输到本地<br>scp -r [服务器用户名]@[服务器地址]:[服务器上存放文件的路径]   [本地文件的路径]</p><p>scp -r <a href="mailto:&#114;&#x6f;&#x6f;&#116;&#x40;&#49;&#57;&#x32;&#46;&#49;&#x36;&#56;&#x2e;&#49;&#46;&#49;">&#114;&#x6f;&#x6f;&#116;&#x40;&#49;&#57;&#x32;&#46;&#49;&#x36;&#56;&#x2e;&#49;&#46;&#49;</a>:/root/default/test /Users/mac/Desktop</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Unix&quot;&gt;&lt;a href=&quot;#Unix&quot; class=&quot;headerlink&quot; title=&quot;Unix&quot;&gt;&lt;/a&gt;Unix&lt;/h1&gt;&lt;h1 id=&quot;Unix-常用命令技巧（可配-linux-大部分命令）&quot;&gt;&lt;a href=&quot;#Unix-常用命令技巧（可配-lin</summary>
      
    
    
    
    <category term="命令技巧" scheme="http://example.com/categories/%E5%91%BD%E4%BB%A4%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="unix" scheme="http://example.com/tags/unix/"/>
    
  </entry>
  
  <entry>
    <title>hello hexo</title>
    <link href="http://example.com/2021/05/08/hello-world/"/>
    <id>http://example.com/2021/05/08/hello-world/</id>
    <published>2021-05-08T08:52:00.684Z</published>
    <updated>2021-05-10T16:42:05.309Z</updated>
    
    <content type="html"><![CDATA[<p>本篇文章介绍了如何使用hexo博客以及配置相关的内容（包括统计插件，评论插件等）：</p><h2 id="安装并发布hexo"><a href="#安装并发布hexo" class="headerlink" title="安装并发布hexo"></a>安装并发布hexo</h2><p>安装hexo：npm install -g hexo-cli<br>检查是否安装成功：hexo -v<br>初始化网址：hexo init<br>接着输入 npm install 来安装这个网址所需要的依赖插件：npm install<br>生成静态网页：hexo g<br>开启本地服务器：hexo s<br>自动部署插件：npm install hexo-deployer-git  –save<br>自动更新文件：hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br>Hexo常用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;一个新的文章&quot;</span>    <span class="comment">#这是创建新的文章的命令</span></span><br><span class="line">hexo g    <span class="comment">#生成静态网页</span></span><br><span class="line">hexo s    <span class="comment">#启动本地服务</span></span><br><span class="line">hexo d    <span class="comment">#部署到github或别地方</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a><br>More info: <a href="https://hexo.io/docs/server.html">Server</a><br>More info: <a href="https://hexo.io/docs/generating.html">Generating</a><br>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h2 id="配置统计信息"><a href="#配置统计信息" class="headerlink" title="配置统计信息"></a>配置统计信息</h2><p>然后接下来就是配置一下如何进行在线观看人数的配置<br>我们会使用到LeanCloud进行移动应用的配置<br>1.注册创建一个leanCloud的应用<br>2.配置LeanCloud<br>进入新创建好的应用，点击存储，这时需要创建名为Counter的class用来存储访问博客的数据，例如：访问次数，最新访问时间等信息。class类名必须为Counter，主要为了与next主题相兼容，否则无法接收到相关数据。为了避免后续因为权限的问题导致次数统计显示不正常，ACL权限选择无限制（所有人可读可写）<br>3.​ 在所有应用中获取当前新建应用的app_id和app_key<br>4.修改博客根目录-&gt;themes-&gt;next-&gt;_config.yml文件，app_id和app_key是上图获取到的，找到如下代码替换app_id和app_key并将enable改为true，代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Show number of visitors to each article.</span></span><br><span class="line"><span class="comment"># You can visit https://leancloud.cn get AppID and AppKey.</span></span><br><span class="line">leancloud_visitors:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  app_id: <span class="comment">#AppID</span></span><br><span class="line">  app_key: <span class="comment">#AppKey //注意这里一定要是字符串类型的</span></span><br></pre></td></tr></table></figure><p>配置完成后重新部署hexo即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>5.此处配置完成之后还要配置一下卜算子的这个主题插件的配置<br>对于leancloud_count，你必须设置appid、appkey；对于busuanzi_count，你只需要开启它即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># post_count</span></span><br><span class="line">leancloud_count:</span><br><span class="line">+   <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">+   appid: <span class="string">&#x27;dXz&#x27;</span></span><br><span class="line">+    appkey: <span class="string">&#x27;wzG&#x27;</span></span><br><span class="line">    like_post:</span><br><span class="line">        <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">+   visit_post:</span><br><span class="line">        <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">    topN_post: </span><br><span class="line">        <span class="built_in">enable</span>: <span class="literal">true</span> <span class="comment">#param1 for topN_post</span></span><br><span class="line">        <span class="built_in">limit</span>: 10 <span class="comment">#param2 for topN_post</span></span><br><span class="line">busuanzi_count:</span><br><span class="line">    <span class="built_in">enable</span>: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><a href="https://notes.wanghao.work/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html">参考资料</a></p><h2 id="配置评论插件Gitalk"><a href="#配置评论插件Gitalk" class="headerlink" title="配置评论插件Gitalk"></a>配置评论插件Gitalk</h2><p>下面我们开始配置评论插件Gitalk<br>1.首先我们需要设置一个github仓库用来存放评论<br>2.然后用申请一个Oauth application<a href="https://github.com/settings/applications/new">链接</a>申请之后拿到Client ID以及Client secrets<br>3.然后对hexo中themes中对_config.yml进行简单的配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">gitalk:</span><br><span class="line">    <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">    clientID: <span class="string">&#x27;&#x27;</span> </span><br><span class="line">    clientSecret: <span class="string">&#x27;&#x27;</span> </span><br><span class="line">    repo: [之前创建的仓库名]</span><br><span class="line">    owner: 创建的仓库的owner</span><br><span class="line">    admin: 创建的仓库的admin</span><br><span class="line">    distractionFreeMode: <span class="literal">true</span></span><br><span class="line">    <span class="comment">#去除 more、index.html、?query=123等格式尾部 </span></span><br><span class="line">    hrefTrimend: <span class="string">&#x27;#.*$,\\?.*$,index.html$&#x27;</span> </span><br></pre></td></tr></table></figure><p>注意的是这个可能建立之后不能立即评论，需要初始化一下评论，简单的来说就是管理员和仓库owner都登陆一遍差不多就可以了<br><a href="https://github.com/gitalk/gitalk/issues">issues</a></p><h2 id="live2d插件（动态2d效果）"><a href="#live2d插件（动态2d效果）" class="headerlink" title="live2d插件（动态2d效果）"></a>live2d插件（动态2d效果）</h2><p>1.安装Live2D插件：npm install –save hexo-helper-live2d<br>然后安装喜欢的动画：npm install xxxxxx<br>下面是安装的列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">live2d-widget-model-chitose</span><br><span class="line">live2d-widget-model-epsilon2_1</span><br><span class="line">live2d-widget-model-gf</span><br><span class="line">live2d-widget-model-haru/01 (use npm install --save live2d-widget-model-haru)</span><br><span class="line">live2d-widget-model-haru/02 (use npm install --save live2d-widget-model-haru)</span><br><span class="line">live2d-widget-model-haruto</span><br><span class="line">live2d-widget-model-hibiki</span><br><span class="line">live2d-widget-model-hijiki</span><br><span class="line">live2d-widget-model-izumi</span><br><span class="line">live2d-widget-model-koharu</span><br><span class="line">live2d-widget-model-miku</span><br><span class="line">live2d-widget-model-ni-j</span><br><span class="line">live2d-widget-model-nico</span><br><span class="line">live2d-widget-model-nietzsche</span><br><span class="line">live2d-widget-model-nipsilon</span><br><span class="line">live2d-widget-model-nito</span><br><span class="line">live2d-widget-model-shizuku</span><br><span class="line">live2d-widget-model-tororo</span><br><span class="line">live2d-widget-model-tsumiki</span><br><span class="line">live2d-widget-model-unitychan</span><br><span class="line">live2d-widget-model-wanko</span><br><span class="line">live2d-widget-model-z16</span><br></pre></td></tr></table></figure><p>2.修改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Live2D动画</span></span><br><span class="line">live2d:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  scriptFrom: <span class="built_in">local</span></span><br><span class="line">  pluginRootPath: live2dw/</span><br><span class="line">  pluginJsPath: lib/</span><br><span class="line">  pluginModelPath: assets/</span><br><span class="line">  tagMode: <span class="literal">false</span></span><br><span class="line">  debug: <span class="literal">false</span></span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-shizuku</span><br><span class="line">  display:</span><br><span class="line">    position: right </span><br><span class="line">    width: 150</span><br><span class="line">    height: 300</span><br><span class="line">  mobile:</span><br><span class="line">    show: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>主要参数说明</p><p>enable //是否使用<br>model:<br>use: live2d-widget-model-shizuku //要使用的模型名称<br>display:<br>position: right //显示的位置<br>width: 150 //宽度<br>height: 150 //高度<br>mobile:<br>show: true //移动端是否显示</p><h2 id="其他使用的命令"><a href="#其他使用的命令" class="headerlink" title="其他使用的命令"></a>其他使用的命令</h2><p>创建分类页：hexo new page categories </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: categories</span><br><span class="line">date: 2019-03-30 19:25:34</span><br><span class="line">+ layout: categories</span><br><span class="line">+ <span class="built_in">type</span>: categories</span><br></pre></td></tr></table></figure><p>创建标签页：hexo new page tags</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: tags</span><br><span class="line">date: 2019-03-30 19:25:34</span><br><span class="line">+ layout: tags</span><br><span class="line">+ <span class="built_in">type</span>: tags</span><br></pre></td></tr></table></figure><p>创建关于页：hexo new page about</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: about</span><br><span class="line">date: 2019-03-30 19:25:34</span><br><span class="line">+ layout: about</span><br><span class="line">+ <span class="built_in">type</span>: about</span><br></pre></td></tr></table></figure><p>创建相册页：hexo new page gallery</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: gallery</span><br><span class="line">date: 2019-03-30 19:25:34</span><br><span class="line">+ layout: gallery</span><br><span class="line">+ <span class="built_in">type</span>: gallery</span><br></pre></td></tr></table></figure><p>打开文件data.json（Annie/source/plugin/gallerypage/data.json）, 按照json语法在数组[……]中添加gallery的图片数据，请设置合适的eWidth、eHeight的值。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">&#123;&#125;, </span><br><span class="line">&#123;</span><br><span class="line">        <span class="string">&quot;thumbnail&quot;</span>: <span class="string">&quot;https://img.jpg&quot;</span>,     //小图路径</span><br><span class="line">        <span class="string">&quot;enlarged&quot;</span>: <span class="string">&quot;https://img.jpg&quot;</span>, //大图路径（可与小图一致）</span><br><span class="line">        <span class="string">&quot;title&quot;</span>: <span class="string">&quot;百里守约&quot;</span>,//图片标题</span><br><span class="line">        <span class="string">&quot;categories&quot;</span>: [&#123;</span><br><span class="line">                <span class="string">&quot;id&quot;</span>: 9,//根据id来进行分类</span><br><span class="line">                <span class="string">&quot;title&quot;</span>: <span class="string">&quot;百里玄策&quot;</span>,</span><br><span class="line">                <span class="string">&quot;photo_count&quot;</span>: 41787, //可忽略</span><br><span class="line">                <span class="string">&quot;links&quot;</span>: &#123;//可忽略</span><br><span class="line">                    <span class="string">&quot;self&quot;</span>: <span class="string">&quot;https://img.jpg&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;photos&quot;</span>: <span class="string">&quot;https://img.jpg&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&quot;tWidth&quot;</span>: 800.6130030959752,//小图相对宽度</span><br><span class="line">        <span class="string">&quot;tHeight&quot;</span>: 500,   //小图相对高度</span><br><span class="line">        <span class="string">&quot;eWidth&quot;</span>: 3630,   //大图相对宽度</span><br><span class="line">        <span class="string">&quot;eHeight&quot;</span>: 2907   //大图相对高度</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;&#125;</span><br><span class="line"> ]</span><br></pre></td></tr></table></figure><p>当然，你可以将该文件data.json移至其他目录，相应地修改路径gallery_data</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gallery page</span></span><br><span class="line"><span class="comment"># gallery_format: natural | square</span></span><br><span class="line">gallery_format: natural</span><br><span class="line"><span class="comment"># one time to load 4 rows or other count, 0 to load img automatically when scrolling.(0,1,2,3,4,5,6......)</span></span><br><span class="line">gallery_limit: 0</span><br><span class="line"><span class="comment"># data url</span></span><br><span class="line">+ gallery_data: plugin/gallerypage/data.json</span><br></pre></td></tr></table></figure><p>创建站内搜索：npm install hexo-generator-search-zip –save<br>编辑站点目录下的_config.yml，添加如下语句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.json</span><br><span class="line">  zipPath: search.zip</span><br><span class="line">  versionPath: searchVersion.txt</span><br><span class="line">  field: post</span><br><span class="line">  <span class="comment">#field: post, page or all（3个可选参数）</span></span><br></pre></td></tr></table></figure><p>编辑主题目录下的_config.yml，添加如下语句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/flashlab/hexo-generator-search</span></span><br><span class="line">local_search:</span><br><span class="line">    <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">    <span class="comment"># if auto, trigger search by changing input</span></span><br><span class="line">    <span class="comment"># if manual, trigger search by pressing enter key or search button</span></span><br><span class="line">    trigger: auto</span><br><span class="line">    <span class="comment"># show top n results per article, show all results by setting to -1</span></span><br><span class="line">    top_n_per_article: 2</span><br></pre></td></tr></table></figure><h2 id="下面描述一下博客md文档生成时会出现的错误"><a href="#下面描述一下博客md文档生成时会出现的错误" class="headerlink" title="下面描述一下博客md文档生成时会出现的错误"></a>下面描述一下博客md文档生成时会出现的错误</h2><p>1.首先是图片问题，可能出现图片上传然后渲染不出来的情况<br>  下面是解决方法<br>  第一步（简单配置）：<br>  （1）把主页配置文件_config.yml 里的post_asset_folder:这个选项设置为true<br>  （2）在你的hexo目录下执行这样一句话npm install hexo-asset-image –save，这是下载安装一个可以上传本地图片的插件<br>  （3）等待一小段时间后，再运行hexo n “xxxx”来生成md博文时，/source/_posts文件夹内除了xxxx.md文件还有一个同名的文件夹<br>  第二步（如何使用）：<br>  （4）最后在xxxx.md中想引入图片时，先把图片复制到xxxx这个文件夹中，然后只需要在xxxx.md中按照markdown的格式引入图片：!【你想输入的替代文字】(xxxx/图片名.jpg)<br>  注意： xxxx是这个md文件的名字，也是同名文件夹的名字。只需要有文件夹名字即可，不需要有什么绝对路径。你想引入的图片就只需要放入xxxx这个文件夹内就好了，很像引用相对路径<br>  （5）最后检查一下，hexo g生成页面后，进入public\2017\02\26\index.html文件中查看相关字段，可以发现，html标签内的语句是<br>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;2017/02/26/xxxx/图片名.jpg&quot;&gt;</span><br></pre></td></tr></table></figure><br>  而不是<br>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;xxxx/图片名.jpg&quot;&gt;</span><br></pre></td></tr></table></figure><br>  这很重要，关乎你的网页是否可以真正加载你想插入的图片。</p><p>  经过一段时间的努力，上面的操作没有奏效qwq<br>  于是开始想用另外一种方法，将图片存放在云上以http网址访问，这种还没开始弄，以后弄好后会更新<br>  另外一种比较朴素的方法是将所要使用的图片保存到source目录下，新建一个images文件夹，然后在这里面存放，经过编译以后，这个文件会直接放在根目录上面，以后调用的时候直接用 /images/xxx.jpg 的路径就可以了</p><p>【完结撒花】</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本篇文章介绍了如何使用hexo博客以及配置相关的内容（包括统计插件，评论插件等）：&lt;/p&gt;
&lt;h2 id=&quot;安装并发布hexo&quot;&gt;&lt;a href=&quot;#安装并发布hexo&quot; class=&quot;headerlink&quot; title=&quot;安装并发布hexo&quot;&gt;&lt;/a&gt;安装并发布hexo&lt;</summary>
      
    
    
    
    <category term="教程" scheme="http://example.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
  </entry>
  
</feed>
